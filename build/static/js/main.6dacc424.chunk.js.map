{"version":3,"sources":["components/Texterror.js","components/FormikInput.js","components/Formikradio.js","components/FormikControl.js","components/BmiDisplay.js","pages/bmiform.jsx","utils/chartLabelFinder.js","utils/chartDictinctCount.js","pages/chart.jsx","pages/landingpage.jsx","App.js","index.js"],"names":["Texterror","props","children","FormikInput","label","name","rest","className","htmlFor","id","style","color","componet","FormikRadioButton","options","field","map","option","Fragment","type","value","checked","key","FormikControl","control","BmiDisplay","bmi","useState","text","settext","useEffect","Container","Row","Col","maxWidth","dotenv","config","radioOptions","initialValues","age","height","weight","gender","validationSchema","Yup","min","max","required","Bmiform","setrefresher","refresher","setbmi","onSubmit","values","a","axios","post","process","then","resp","console","log","data","message","e","fluid","formik","placeholder","Button","variant","labelfinder","Data","Set","x","bmitext","DistinctCount","count","reduce","names","Object","Chart","DATA","setDATA","method","url","response","userdatfetch1","error","labels","datasets","backgroundColor","borderColor","borderWidth","width","maintainAspectRatio","Landingpage","App","path","component","landingpage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dacc424.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Texterror(props) {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Texterror\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport Texterror from \"./Texterror.js\";\r\n\r\nfunction FormikInput(props) {\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div className='p-2'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <br/>\r\n      <Field id={name} name={name} {...rest} />\r\n      <br/>\r\n      <div style={{ color: 'red'}}>\r\n      <ErrorMessage name={name}  componet={Texterror} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormikInput;\r\n","import React from 'react';\r\nimport { Field,ErrorMessage } from 'formik';\r\nimport Texterror from './Texterror';\r\n\r\nconst FormikRadioButton = (props) => {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <>\r\n      <label className=\"p-1\" htmlFor={name}>{label}</label>\r\n      <Field name={name} {...rest} >\r\n        {\r\n          ({ field }) => {\r\n            return options.map(option => {\r\n              return (\r\n                <React.Fragment key={option.key}>\r\n                  <input\r\n                  \r\n                    type='radio'\r\n                    id={option.id}\r\n                    {...field}\r\n                    value={option.value}\r\n                    checked={field.value === option.value}\r\n                  />\r\n                  <label htmlFor={option.id} className=\"p-1\" >{option.key}</label>\r\n\r\n                </React.Fragment>\r\n              );\r\n            })\r\n          }\r\n        }\r\n      </Field>\r\n      <br/>\r\n      <div style={{ color: 'red'}}>\r\n      <ErrorMessage name={name}  componet={Texterror} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormikRadioButton;","import React from 'react'\r\nimport FormikInput from './FormikInput'\r\nimport FormikRadioButton from './Formikradio';\r\n\r\nfunction FormikControl(props) {\r\n    const {control, ...rest}=props\r\n   switch (control) {\r\n       case 'input': return <FormikInput {...rest}/>;\r\n       case  'radio': return <FormikRadioButton {...rest}/>   \r\n       default: return null\r\n    \r\n   }\r\n}\r\n\r\nexport default FormikControl\r\n","import React ,{useState,useEffect} from 'react'\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { ImHappy,ImCrying2,ImSad2 } from \"react-icons/im\"; //healthy ,underweight , obses\r\nimport { HiOutlineEmojiSad } from \"react-icons/hi\"; //overwight\r\n\r\nconst BmiDisplay=({bmi})=> {\r\nconst [text, settext] = useState(\"\")\r\n\r\n\r\nuseEffect(() => {\r\nif(bmi===0)\r\n{\r\nreturn settext(\"BMI value is ZERO\")\r\n}\r\nelse if(bmi>=30.0)\r\n{\r\n    return  settext(\"Obese\");\r\n}\r\nelse if(bmi<=29.0 && bmi>=25.0)\r\n{\r\n    return  settext(\"Overweight\");\r\n}\r\nelse if(bmi<=24.9 && bmi>=18.5){\r\n    return  settext(\"Healthy\");\r\n}\r\nelse{\r\n    return  settext(\"Underweight\");\r\n}  \r\n}, [bmi])\r\n\r\n\r\n    return (\r\n      \r\n        <Container>\r\n           <Row className=\"d-flex justify-content-center\" >\r\n                <Col style={{maxWidth:\"50%\"}} className=\"mt-4 p-4\" >\r\n                  <h4> You'r BMI VALUE:{bmi}   </h4> \r\n                   <br/>\r\n                   <h3>you'r {text}  {text===\"Obese\" \r\n                   ?\r\n                   <ImSad2/>\r\n                    :text===\"Overweight\"\r\n                     ?\r\n                   <HiOutlineEmojiSad/>\r\n                   :text===\"Healthy\"\r\n                   ?\r\n                   <ImHappy/>\r\n                   :text===\"Underweight\"\r\n                  ?\r\n                   <ImCrying2/>\r\n                   :\r\n                   \"\"\r\n                }  </h3>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n    );\r\n}\r\n\r\nexport default BmiDisplay\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"../components/FormikControl\";\r\nimport BmiDisplay from \"../components/BmiDisplay\";\r\nimport dotenv from \"dotenv\";\r\nimport axios from \"axios\";\r\n\r\ndotenv.config();\r\n\r\nconst radioOptions = [\r\n  { key: \"male\", value: \"male\" },\r\n  { key: \"female\", value: \"female\" },\r\n];\r\n\r\nconst initialValues = {\r\n  age: \"\",\r\n  height: \"\",\r\n  weight: \"\",\r\n  gender: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  age: Yup.number(\"Eneter Valid Age\")\r\n    .min(1, \"Enter Valid Age\")\r\n    .max(120, \"Enter Valid Age\")\r\n    .required(\"Required\"),\r\n  height: Yup.number(\"Eneter Valid Age\")\r\n    .min(1, \"Enter Valid Height\")\r\n    .max(300, \"Enter Valid Height\")\r\n    .required(\"Required\"),\r\n  weight: Yup.number(\"Eneter Valid Age\")\r\n    .min(1, \"Enter Valid Weight\")\r\n    .max(600, \"Enter Valid Weight\")\r\n    .required(\"Required\"),\r\n  gender: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst Bmiform = ({setrefresher,refresher}) => {\r\n  const [bmi, setbmi] = useState(0);\r\n\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      axios\r\n        .post(`${process.env.REACT_APP_BASE_URL}/app/usersave`, { ...values })\r\n        .then((resp) => {\r\n          console.log(resp);\r\n          if (resp.data.message === \"user saved\") {\r\n            setbmi(resp.data.data);\r\n            setrefresher(!refresher)\r\n          } else {\r\n            setbmi(0);\r\n          }\r\n        });\r\n    } catch (e) {\r\n      console.log(e.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column bd-highlight\">\r\n      <div className=\"p-1 flex-fill bd-highlight\">\r\n        <Container fluid=\"sm\" className=\"mainconatiner \">\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <Col style={{ maxWidth: \"50%\" }} className=\"mt-4 p-4\">\r\n              <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n              >\r\n                {(formik) => (\r\n                  <Form className=\"p-1 dflex justify-content-center-\">\r\n                    <h4> BMI</h4>\r\n                    <FormikControl\r\n                      label=\"Age\"\r\n                      control=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Age\"\r\n                      name=\"age\"\r\n                    />\r\n\r\n                    <div>\r\n                      <FormikControl\r\n                        name=\"gender\"\r\n                        control=\"radio\"\r\n                        label=\"Gender\"\r\n                        options={radioOptions}\r\n                      />\r\n                    </div>\r\n\r\n                    <FormikControl\r\n                      label=\"Height (cm)\"\r\n                      control=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Height (cm)\"\r\n                      name=\"height\"\r\n                    />\r\n\r\n                    <FormikControl\r\n                      label=\"Weight (kg)\"\r\n                      control=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter  Weight (kg)\"\r\n                      name=\"weight\"\r\n                    />\r\n\r\n                    <Button variant=\"success\" type=\"submit\" className=\"m-4\">\r\n                      Submit\r\n                    </Button>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <div className=\"p-1 flex-fill bd-highlight\">\r\n        <BmiDisplay bmi={bmi}  />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Bmiform;\r\n","const labelfinder=(Data)=>{\r\n    let arr=[...new Set(Data.map(x=>x.bmitext))];\r\n    ;\r\n    return arr\r\n}\r\nexport default labelfinder","\r\n\r\nconst DistinctCount=(Data)=>{\r\nlet count=Data.map(({ bmitext }) => bmitext)\r\n.reduce((names, bmitext) => {\r\n  const count = names[bmitext] || 0;\r\n  names[bmitext] = count + 1;\r\n  return names;\r\n}, {});\r\n  console.log(count)\r\n    let result=Object.values(count)\r\n    return result\r\n}\r\nexport default DistinctCount","import React,{useEffect,useState} from 'react'\r\nimport {Container ,Row,Col} from \"react-bootstrap\";\r\nimport {Doughnut} from 'react-chartjs-2'\r\nimport axios from \"axios\"\r\nimport dotenv from \"dotenv\";\r\nimport labelfinder from '../utils/chartLabelFinder.js'\r\nimport DistinctCount from '../utils/chartDictinctCount.js'\r\n\r\n\r\ndotenv.config();\r\nexport default function Chart({refresher}) {\r\nconst [DATA, setDATA] = useState([])\r\n\r\nuseEffect(() => {\r\n    try {\r\n      async function userdatfetch1() {\r\n        await axios({\r\n          method: \"Get\",\r\n          url: `${process.env.REACT_APP_BASE_URL}/app/allusers`,\r\n        }).then((resp) => {\r\n          const response = resp.data;\r\n          setDATA(response);\r\n        });\r\n      }\r\n      userdatfetch1();\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }, [refresher]);\r\n\r\n    return (\r\n      <Container fluid=\"sm\" className=\"mainconatiner \">\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <Col style={{ maxWidth: \"80%\",height:\"50vh\"}} className=\"mt-3 pt-4\">\r\n        <h4>BMI HISTORY Chart</h4>\r\n        <br/>\r\n            <Doughnut\r\n             data={{\r\n              labels:labelfinder(DATA),\r\n                datasets: [{\r\n                    label: '',\r\n                    data: DistinctCount(DATA),\r\n                    backgroundColor: [\r\n                        'red',\r\n                        'blue',\r\n                        'green',\r\n                        'yellow',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(245, 236, 66 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                    ],\r\n                    borderWidth: 2\r\n                }]\r\n             }}\r\n             height={800}\r\n             width={100}\r\n             options={{\r\n                 maintainAspectRatio:false,\r\n                 \r\n             }}\r\n            />\r\n    </Col>\r\n          </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport Bmiform from './bmiform'\r\nimport Chart from './chart'\r\n\r\nfunction Landingpage() {\r\n    const [refresher, setrefresher] = useState(true);\r\n\r\n    return (\r\n<div className=\"d-flex bd-highlight\">\r\n<div className=\"flex-fill bd-highlight\"><Chart refresher={refresher}/></div>\r\n<div className=\"ml-4  flex-fill bd-highlight \">\r\n     <Bmiform setrefresher={setrefresher} refresher={refresher}/>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Landingpage\r\n","import {Route,BrowserRouter as Router ,Switch} from 'react-router-dom';\n\nimport landingpage from './pages/landingpage.jsx';\n\n\n\nfunction App() {\n  return (\n    <div>\n    <Router>\n    <Switch>\n       <Route path=\"/\"  component={landingpage}/>\n    </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}